@using company.Common
@using backend.Controllers
@*@model MonthlyBrochureRequest*@
@model GoogleMapArcadeModel
@{
    ViewBag.Title = "Arcade";
    Layout = null;

    if (Model.RenderPdf)
    {
        Layout = null;
    }
}
<!-- saved from url=(0014)about:internet -->
@*<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml">*@
<head>
   
    @*<link href="~/Content/bootstrap.min.css" rel="stylesheet" />*@
    <style>
        body {
            font-family: Calibri, Verdana;
        }

        .framework{
            min-height:1545px;
            border:1px solid #000;
            width:980px;
            margin:auto
        }

        .hidden {
            display: none;
        }

        .body-black {
            background-color: black;
            /*width:850px;*/
        }

        .title-map-white {
            color: white;
        }

        .body-white {
            background-color: white;
        }

        .title-map-black {
            color: black;
        }

        .title-map-container {
            font-family: MinionPro-Regular;
            /*border:1px solid red;*/
            width: 900px;
            position: relative;
            margin-top: 0px;
            z-index: 99;
        }

        .circle {
            margin-left: auto;
            width: 9px;
            height: 9px;
            border-radius: 50%;
            border-color: #888;
            border-right-style: solid;
            border-width: thin;
        }

            .circle td {
                padding: 1px;
            }



        #googft-mapCanvas {
            height: 100%;
            /*margin: 0;
            padding: 0;*/
            /*background-color:cornflowerblue;*/
        }
         


        .labels {
            color: black;
            background-color: whitesmoke;
            font-family: "Lucida Grande", "Arial", sans-serif;
            font-size: 8px;
            text-align: center;
            height: 14px;
            width: 14px;
            border-radius: 50%;
            line-height: 14px;
            border-color: dimgray;
            border-width: 1px;
            border-style: solid;
            /*white-space: nowrap;*/
        }

        .pdf-link {
            margin-bottom: 10px;
            width: 41px;
            height: 39px;
            display: block;
            background-image: url('../../Images/pdf-black.png');
        }

            .pdf-link:hover {
                background-image: url('../../Images/pdf-red.png');
            }

        .cell-new {
            padding: 2px;
            border-color: #666666;
        }

        .drpbox select {
            width: 200px;
            height: 35px;
            font-family: MinionPro-Regular;
            letter-spacing: 1px;
            font-size: 16px;
        }

        .brand-image-hide {
            display: none;
        }

        .brand-image-black-hide {
            display: none;
        }
        table {
            border:none;
            border-collapse:collapse;
        }
        .thead-style  th, td{
            /*border-bottom:2px solid #DDD;*/
            padding-bottom:4px;
        }
        .even-odd tr:nth-child(2n+1){
            background-color:#CCC;
        }
        /*.body-style tr:nth-child(2n+1){
            background-color:white;
        }*/
        .body-style td{
            border-bottom:1px solid #DDD;
        }

        .map-canvas{
            margin-top:10px;
            height:850px;
            width:850px;
        }
        .map-canvas-wide{ 
            /*margin-top:-50px;*/
            position:relative;
            height:850px;
            width:1700px;
           
            /*margin-left:-400px;*/
            /*margin-bottom:50px*/
        }
        .map-frame{
            background-color:white;
            margin-top:90px;
            margin-bottom:10px;
        }
        .map-frame-wide{
            /*width:100%;*/
            width:1700px;
            height:900px;
            border:solid 2px black;
            margin-left:-420px;
            /*box-shadow:10px 10px 5px #888888;*/
            -webkit-box-shadow: 10px 10px 10px rgba(0, 0, 0, 0.5);
            -moz-box-shadow: 10px 10px 10px rgba(0, 0, 0, 0.5);
            box-shadow: 10px 10px 10px rgba(0, 0, 0, 0.5);
            /*position:absolute;*/
            padding:10px
        }
        .hide-map{
            text-shadow: 2px 2px #888888;
            font-size:18px;
            color:darkred;
            cursor:pointer;
        }
        .icon{
            color:gray;
            font-size:18px;
            text-shadow: 2px 2px #ccc;
            cursor:pointer;
        }
        .icon:hover{
            font-size:22px;
            color:#1E90FF;
        }
        .hide-map:hover{
            font-size:22px;
            color:red;
        }
        .map-menu-holder{
            height:25px;
        }
    </style>
    @*<script src="~/Scripts/jquery-ui-1.8.20.js"></script>*@
    @if (Model.RenderPdf)
    {
        <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    }
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/js.cookie.js"></script>
    <script src="https://maps.google.com/maps/api/js?v=3.exp&sensor=false"></script>
    <script src="https://www.google.com/jsapi"></script>
    <script src="~/Scripts/markerwithlabel.js" type="text/javascript"></script>
    @*<script src="../../Scripts/markerwithlabel.js" type="text/javascript"></script>*@
    <script type="text/javascript">

    document.write('<script type="text/javascript" src="../../Scripts/markermanager' + (document.location.search.indexOf('packed') > -1 ? '_packed' : '') + '.js"><' + '/script>');
    var mgr=null;
    var gmarkers = [];
    var map = null;



    //true=black false=white
    var styleMapBlack=false;

    var styleWhite=[
                { "featureType": "administrative", "elementType": "labels", "stylers": [{ "visibility": "off" }] },
                {"featureType":"water","elementType":"all","stylers":[{"color": "#ffffff"}]},
                { "featureType": "landscape", "stylers": [{ "visibility": "simplified" }, {"weight":0.1},{"color": "#666666" }] },
                {"featureType":"poi","stylers":[{"visibility":"off"}]},
                { "featureType": "road", "stylers": [{ "visibility": "off" }] },
    ];
    var styleWhiteRoad=[
            { "featureType": "administrative", "elementType": "labels", "stylers": [{ "visibility": "on" }] },
            {"featureType":"water","elementType":"all","stylers":[{"color": "#ffffff"}]},
            { "featureType": "landscape", "stylers": [{ "visibility": "simplified" }, {"weight":0.1},{"color": "#a7a7a6" }] },
            {"featureType":"poi","stylers":[{"visibility":"off"}]},
            { "featureType": "road", "stylers": [{ "visibility": "on" }] },
    ];
    var styleBlack=[
        { "featureType": "administrative", "elementType": "labels", "stylers": [{ "visibility": "off" }] },
                {"featureType":"water","elementType":"all","stylers":[{"color":"#000000"}]},
                { "featureType": "landscape", "stylers": [{ "visibility": "simplified" }, {"weight":0.1},{"color": "#666666" }] },
                {"featureType":"poi","stylers":[{"visibility":"off"}]},
                { "featureType": "road", "stylers": [{ "visibility": "off" }] },
    ];
    var styleBlackRoad=[
   { "featureType": "administrative", "elementType": "labels", "stylers": [{ "visibility": "on" }] },
           {"featureType":"water","elementType":"all","stylers":[{"color":"#000000"}]},
           { "featureType": "landscape", "stylers": [{ "visibility": "simplified" }, {"weight":0.1},{"color": "#666666" }] },
           {"featureType":"poi","stylers":[{"visibility":"off"}]},
           { "featureType": "road", "stylers": [{ "visibility": "on" }] },
    ]

    $(document).ready(function(){
        
        /*button for closing wide map view*/
        $("#hideMap").hide();
        var colorpdf='@Html.Raw(ViewBag.Color)';
        if(colorpdf != ''){
            Cookies.set('cookieColor',colorpdf,{expires:7,domain:'',path:'/'})
        }


        // Cookies.set('cookieColor','',{domain:'',path:'/'})
        var nameContinent='@Html.Raw(Model.Continent)';



        $("#id").val(@Html.Raw(Model.Brand.id));
        $("#country").val('@Html.Raw(Model.Country)');
        //var nameCountry=  $("#country").val();
        var nameCountry='@Html.Raw(Model.Country)';
        
        /*Hide show for map menu  items*/
        if(nameCountry != 'UK' || nameContinent == 'EU'){
            $("#brandsForm").hide();
            $("#titleMapContainer").hide();
            $("#hideBlock").hide();
            $("#pdfLink").hide();
            $("#ukSelectBox").hide();
            /*markCountry is for EU countries*/
           // $("#markCountry").hide();
            $("#chooseColor").hide();
        }else{
            /*checkbox*/
            $("#selectCountry").attr('checked',false);
            //$("#selectCountry").hide();
            $("#markCountry").hide();
            

        }
        //if(Cookies.get('cookieColor')!=''){
        //    $('#cookie').html(Cookies.get('cookieColor'));
        //}else{
        //    $('#cookie').html('undefined');
        //}

        //Samo za tablicu i kontejner za google maps njegovepostavke
        if(styleMapBlack || Cookies.get('cookieColor')=='black'){
            $('#colorBlack').attr('checked','checked');
            colorizeBlack();

        }else{
            $('#colorWhite').attr('checked','checked');
            colorizeWhite();
        }



    });

    function colorizeBlack(){
        $("#titleMapContainer,#table,#row").removeClass("title-map-black");
        $("#titleMapContainer,#table,#row").addClass("title-map-white");
        $("#wrapping, #hideBlock, #googft-hide-text,#table,#row").removeClass("body-white");
        $("#wrapping, #hideBlock, #googft-hide-text,#table,#row").addClass("body-black");
        $("#linkTitle").addClass("title-map-white");
        $("#brandImageWhite").removeClass("brand-image-hide");
        $("#brandImageBlack").addClass("brand-image-hide");
        $("#background,.framework").addClass("body-black");
        $("#body1,#body2").removeClass("even-odd");
    }
    function colorizeWhite(){
        $("#titleMapContainer,#table,#row").removeClass("title-map-white");
        $("#title-map-container,#table,#row").addClass("title-map-black");
        $("#wrapping, #hideBlock, #googft-hide-text,#table,#row").removeClass("body-black");
        $("#wrapping, #hideBlock, #googft-hide-text,#table,#row").addClass("body-white");
        $("#linkTitle").removeClass("title-map-white");
        $("#brandImageBlack").removeClass("brand-image-hide");
        $("#brandImageWhite").addClass("brand-image-hide");
        $("#background,.framework").removeClass("body-black");
        //$("#background").removeClass("body-white");
        $("#body1,#body2").addClass("even-odd");
    }

    function colorize(map){
        //var cookieValue=Cookies.get('cookieColor');
        var colorMapBlack= $('input[name=color]:checked').val();

        if(colorMapBlack =='true' ){
            //window.alert("Boja je crna! ");
            map.setOptions({styles:styleBlack});
            colorizeBlack();
            Cookies.set('cookieColor','black',{expires:7,domain:'',path:'/'})
            //$("#cookie").html(Cookies.get('cookieColor'));
        }else{
            // window.alert("Boja je bijela! ");
            styleMapBlack=false;
            if(map){
                map.setOptions({styles:styleWhite});
                // $("body").removeClass("body-black");
                //$("body").addClass("body-white");
                Cookies.set('cookieColor','white',{expires:7,domain:'',path:'/'})
                colorizeWhite();
                //$("#cookie").html(Cookies.get('cookieColor'),{domain:'',path:'/'});
            }
        }

    }
    function zoom(map){
        //zoom=true;

        //if($('#chkbox').attr('checked')){
        //wideMap();
        if($('#chkbox').prop('checked')){

            if(map) {
                map.setOptions({zoomControl:true,scrollwheel:true,scrollwheel: true, disableDoubleClickZoom: false,zoomControlOptions:{position:google.maps.ControlPosition.LEFT_CENTER}});
            }
        }else{
            if(map) {
                map.setOptions({zoomControl:false,scrollwheel:false,scrollwheel: false, disableDoubleClickZoom: true});

            }
        }

    }
    //google.load('visualization', '1', { packages: ['corechart'] });
    function submitForm()
    {

        $("#brandsForm").submit();
    }
    function submitForm2(){
        $("#countryForm").submit();
    }

    function initialize() {
        var nameContinent="@Html.Raw(Model.Continent)";
        google.maps.visualRefresh = true;
        @*var setZoom=6;
        var myLatLng=new google.maps.LatLng(55.126155414883414, -5.8132108593199835);
        var deLatLng=new google.maps.LatLng(50.719069, 10.327148);
        var itLatLng=new google.maps.LatLng(42.468045, 13.227539);
        var ausLatLng=new google.maps.LatLng(-25.294371,134.428711);
        var temp="@(Html.Raw(Model.Country))";
        if(temp == "DE"){
            myLatLng=deLatLng;
            setZoom=5;
        }
        if(temp == "IT"){
            myLatLng=itLatLng;
            setZoom=6;
        }
        if(temp == "AUS"){
            myLatLng=itLatLng;
            setZoom=6;
        }*@
        geocoder=new google.maps.Geocoder();
        var myOptions = {
            //center: myLatLng,
            // zoom: 5,
            zoomControl:false,
            scaleControl:false,
            scrollwheel:false,
            disableDoubleClickZoom:true,
            mypTypeId: google.maps.MapTypeId.ROADMAP,
            disableDefaultUI:true,
            //#a0a3a3
            styles: styleMapBlack || Cookies.get('cookieColor')=='black' ? styleBlack : styleWhite

        }
        map = new google.maps.Map(document.getElementById('googft-mapCanvas'), myOptions);

        codeAddress();

        setupMarkers();
        /*check which markers will show*/

        var layer=new google.maps.FusionTablesLayer();
        if($('#selectCountry').prop("checked")){
            layer=new google.maps.FusionTablesLayer();
            updateLayerQuery(layer);
            layer.setMap(map);
        }else{
            layer.setMap(null);
        }

        google.maps.event.addDomListener(map,'idle',function(){
            toggleMarkers();
        })

        /*button for closing wide map view*/
        google.maps.event.addDomListener(document.getElementById('hideMap'),'click',function(){
            hideWideMap();
            google.maps.event.trigger(map,'resize');
            codeAddress();
        })
        google.maps.event.addDomListener(document.getElementById('chkWide'),'change',function(){
            if ($("#chkWide").prop("checked")) {
                //resize map
                wideMap();
                //reload map
                google.maps.event.trigger(map,'resize');
                if (nameContinent=="EU") {
                    map.setCenter(new google.maps.LatLng(54.776252,7.866211));
                    map.setZoom(5);
                }else{
                    codeAddress();
                }
                //window.scrollTo(0,130);
                $("html,body").animate({scrollTop:130},'800','swing');
            }else{
                wideMap();
                $("html,body").animate({scrollTop:0},'500','swing');
                google.maps.event.trigger(map,'resize');
                codeAddress();
                //map.setCenter(new google.maps.LatLng(47.776252, 7.866211));
                //map.setZoom(4);

            }

        });

        google.maps.event.addDomListener(document.getElementById('chkDotsEmpty'),'change',function(){
            toggleMarkers();
        });

        google.maps.event.addDomListener(document.getElementById('showRoad'),'change',function(){
            var colorBlack=$('input[name=color]:checked').val();
            if($('#showRoad').prop("checked")){
                //alert("CHECKED");

                //alert(colorBlack);
                if(colorBlack=='true'){
                    map.setOptions({styles:styleBlackRoad});
                }else{
                    map.setOptions({styles:styleWhiteRoad});
                }

            }else{
                //alert("UNChecked");
                if(colorBlack =='true'){
                    map.setOptions({styles:styleBlack});
                }else{
                    map.setOptions({styles:styleWhite});
                }
                //map.setOptions({styles:styleWhite});
            }

        });

        google.maps.event.addDomListener(document.getElementById('selectCountry'),'change',function(){
            if ($('#selectCountry').prop("checked")) {

                layer=new google.maps.FusionTablesLayer();
                updateLayerQuery(layer,"","1XULuZoTOzBNiIguwxpKddIqt04SJGzSoeAdGucg");
                layer.setMap(map);
            }else {
                layer.setMap(null);
            }
        });

        google.maps.event.addDomListener(document.getElementById('selectCounties'),'change',function(){
            if ($('#selectCounties').prop("checked")) {
                layer.setMap(null);
                $('#selectCountries').attr('checked',false);
                layer=new google.maps.FusionTablesLayer();
                updateLayerQuery(layer,"GB","1mSb7smookwLKVqP3uKvrvhzy-6T87AdVEiL0_Rw");
                layer.setMap(map);
            }else {
                layer.setMap(null);
            }
        });



        google.maps.event.addDomListener(document.getElementById('selectCountries'),'change',function(){
            if($('#selectCountries').prop("checked")){
                layer.setMap(null);
                $('#selectCounties').attr('checked',false);
                layer=new google.maps.FusionTablesLayer();
                updateLayerQuery(layer,"GB","1BiClMEJUsxbAlpG19I2PJSTIsYs6vwCIRd6meIUl");
                layer.setMap(map);
            }else{
                //alert("unchecked");
                layer.setMap(null);
            }

        });

        $('#chkbox').click(function(){

            zoom(map);
        });
        $('input[name=color]:radio').change(function(){
            //alert($('input[name=color]:checked').val());
            $('#showRoad').attr('checked',false);

            colorize(map);
        });

    };
    
        function hideWideMap(){
            $("#googft-mapCanvas").removeClass("map-canvas-wide");
            $("#googft-mapCanvas").addClass("map-canvas");
            $("#googftMapContainer").removeClass("map-frame-wide");
            $("#googft-mapCanvas").height(850).css({"position":"relative","margin-left":"0px"});
            $("#hideMap").hide();  
            $('#chkWide').attr("checked",false);

            $("#googft-hide-text").addClass("body-white");
            $("html,body").animate({scrollTop:0},'800','swing');
        }

    function codeAddress(){
        //var nameCountry=  $("#country option:selected").text();
        var nameCountry="@Html.Raw(Model.CountryFullName)";
        var nameContinent="@Html.Raw(Model.Continent)";

        var address=nameCountry;

        geocoder.geocode({'address':address},function(results,status){

            if(status==google.maps.GeocoderStatus.OK){
                map.setCenter(results[0].geometry.location);
                if(nameCountry=="United Kingdom" && nameContinent == ""){
                    map.setCenter(new google.maps.LatLng(55.126155414883414, -5.8132108593199835));
                    map.setZoom(6);

                }
                else if(nameContinent =="EU"){

                    map.setCenter(new google.maps.LatLng(47.776252, 7.866211));
                    map.setZoom(4);
                }
                else{
                    map.fitBounds(results[0].geometry.viewport);
                }
                //var marker=new google.maps.Marker({
                //    map:map,
                //    position:results[0].geometry.location
                //});
            }else{
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }

    function wideMap(){
        var nameCountry="@Html.Raw(Model.Country)";
        var nameContinent="@Html.Raw(Model.Continent)";
        if ($('#chkWide').prop("checked")) {
            $("#googft-mapCanvas").removeAttr("style");
            $("#googft-mapCanvas").removeClass("map-canvas");
            $("#googft-hide-text").removeClass("body-white");
            $("#googft-mapCanvas").addClass("map-canvas-wide");
            $("#googftMapContainer").addClass("map-frame-wide");
            $("#hideMap").show();
            //sakrrij natpise brandova
            $("#titleMapContainer,#brandImageBlack,#brandImageWhite").hide();

        }else{
            //alert("papa");
            $("#googft-mapCanvas").removeClass("map-canvas-wide");
            $("#googft-mapCanvas").addClass("map-canvas");
            $("#googftMapContainer").removeClass("map-frame-wide");
            $("#googft-mapCanvas").height(850).css("position","relative");
            $("#googft-hide-text").addClass("body-white");
            $("#hideMap").hide();  

            if (nameContinent != "EU" && nameCountry =="UK") {
                $("#titleMapContainer,#brandImageBlack,#brandImageWhite").show();
            }

        }

    }

    function updateLayerQuery(layer,country,link){
        //alert(country);
        var country=country;
        var country2="";
        var iscountry2=false;
        @*if("@Html.Raw(Model.Country)"=="UK"){
            var iscountry2=true;
            country2="name_forma IN('United Kingdom of Great Britain and Northern Ireland') ";
            country="iso_a2 IN ('IE')";
        }*@
        if (country=='GB') {
            layer.setOptions({
                query: {
                    select:'geometry',
                    from:link,
                    where:'All',
                    map:map,
                    clickable:true,
                    delay:1,
                    tolerance:8
                },
                options: {
                    styleId:2,
                    templateId:2
                },
                styles:[{

                    polygonOptions:{fillOpacity:0.3}
                }]
            });
            return null;
        }else{
            country="iso_a2 IN ('@Html.Raw(Model.Country)')";
        }
        //country="ISO_2DIGIT IN ('@Html.Raw(Model.Country)')";


        //  }
        layer.setOptions({
            query: {
                //select:'geometry',
                select:'kml_4326',
                from:'1XULuZoTOzBNiIguwxpKddIqt04SJGzSoeAdGucg',
                where:country,
                map:map,


                //clickable:false,
                delay:1,
                tolerance:8
            },styles:[
                {polygonOptions:{
                    strokeWeight:"2",
                    strokeColor:"#FF6600",
                    fillColor:'#FF9900',
                    fillOpacity:0.3,
                }}
            ],
            suppressInfoWindows: true,
        });
        if(iscountry2==true){
            layer.setOptions({
                query: {
                    //select:'geometry',
                    select:'kml_4326',
                    from:'1XULuZoTOzBNiIguwxpKddIqt04SJGzSoeAdGucg',
                    where:country2,
                    map:map,


                    //clickable:false,
                    delay:1,
                    tolerance:8
                },styles:[
                    {polygonOptions:{
                        strokeWeight:"2",
                        strokeColor:"#CCFF66",
                        fillColor:'#FF9900',
                        fillOpacity:0.3,
                    }}
                ],
                suppressInfoWindows: true,
            });}
    }

    function setupMarkers(numbered){

        var redI=@Html.Raw(Json.Encode(Model.Pin1));

        var redII=@Html.Raw(Json.Encode(Model.Pin2));
        var redIII=@Html.Raw(Json.Encode(Model.Pin3));
        var redIV=@Html.Raw(Json.Encode(Model.Pin4));
        var redV=@Html.Raw(Json.Encode(Model.Pin5));
        var redVI=@Html.Raw(Json.Encode(Model.Pin6));
        var red=[];
        if(redI.length>499){
            red=redI.concat(redII);
        }else if(redII >499){
            red=red.concat(redIII);
        }else if(redIII >499){
            red=red.concat(redIV);
        }else if(redIV >499){
            red=red.concat(redV);
        }else if(redV > 499){
            red = red.concat(VI);
        }
        else{
            red=redI;
        }


        mgr=new MarkerManager(map);
        google.maps.event.addListener(mgr,'loaded',function(){
            mgr.addMarkers(initMarkers(red));
        })
        //initMarkers(red,numbered);

        /**/
        console.log(redI.length);
        console.log(redII.length);
        console.log(red.length);

        //Postavi markere
    }

    function initMarkers(red){
        //mgr=new MarkerManager(map);
        for(var regM in red){
            if(red[regM].latitude != null){
                var loca= red[regM];
                var myLatLng=new google.maps.LatLng(red[regM].latitude,red[regM].longitude);
                //console.log(red[regM].latatitude+" "+ red[regM].longitude +" "+ red[regM].color);
                //var marker=new google.maps.Marker({

                /*setup numbered marker*/
                var marker=new MarkerWithLabel({
                    map:map,
                    position:myLatLng,
                    // icon:'../Images/markers/'+ red[regM].color +'.png',
                    icon:{
                        //url:'../Images/markers/'+ red[regM].color +'.png',
                        path:google.maps.SymbolPath.CIRCLE ,

                        scale:0,
                        //strokeWeight:0.5,
                        //fillColor:'white',//+ red[regM].color +'',
                        //fillOpacity:0.1
                        // zIndexProcess:red[regM].index
                    },
                    title:red[regM].name,
                    // animation: google.maps.Animation.DROP,
                    draggable: true,
                    raiseOnDrag: true,
                    labelContent: ""+ red[regM].number,
                    labelAnchor: new google.maps.Point(8, 7),
                    labelClass: "labels", // the CSS class for the label
                    //labelInBackground: true

                });
                marker.category="numbered";
                gmarkers.push(marker);
                marker=new MarkerWithLabel({
                    map:map,
                    position:myLatLng,
                    // icon:'../Images/markers/'+ red[regM].color +'.png',
                    icon:{
                        //url:'../Images/markers/'+ red[regM].color +'.png',
                        path:google.maps.SymbolPath.CIRCLE ,

                        scale:3.5,
                        strokeWeight:1,
                        fillColor:'red',//+ red[regM].color +'',
                        fillOpacity:0.9
                        // zIndexProcess:red[regM].index
                    },
                    //animation: google.maps.Animation.DROP,
                    title:red[regM].name,
                    draggable: true,
                    raiseOnDrag: true,
                    labelContent: "",
                    labelAnchor: new google.maps.Point(8, 7),
                    //labelClass: "labels", // the CSS class for the label
                    //labelInBackground: true

                });

                marker.category="empty";
                gmarkers.push(marker);
            }
        }
        return marker;
    }
    function toggleMarkers(){
        if($("#chkDotsEmpty").prop("checked")){
            //alert( gmarkers.length)
            //setupMarkers(true);
            //while(gmarkers.length){gmarkers.pop()}
            for(var i=0;i < gmarkers.length;i++){
                if (gmarkers[i].category == "empty" ){
                    gmarkers[i].setVisible(false);
                    //gmarkers[i].setMap(null);
                }else{
                    gmarkers[i].setVisible(true);
                }
            }
        }else{
            for(var i=0;i < gmarkers.length;i++){
                if (gmarkers[i].category == "numbered" ){
                    gmarkers[i].setVisible(false);
                    //gmarkers[i].setMap(null);

                }else{
                    gmarkers[i].setVisible(true);
                }
            }
        }
    }
    google.maps.event.addDomListener(window, 'load', initialize);
    </script>
    @{
        var markerDesc = new Dictionary<string, string>{
            {"Clearwater","yellow-dot.png"},
            {"Burlington","blue-dot.png"},
            {"Britton","green-dot.png"},
            {"Arcade","red-dot.png"},
            {"Cleargreen","yellow-dot.png"}
        };
    }
</head>
@* onload ="initialize()" *@

<body @*style="@(Model.RenderPdf?@"background-color:black":"")"*@>
    <div class="framework">
        <div @*style="border:1px solid #000;width:980px;margin:auto"*@>

            <div style="background-color:#FFF;margin:30px">
                <img src="~/Images/Logo.jpg" />
            </div>

            <div style="position:relative;margin-right:-320px;margin-top:-100px;">
                <table style="float:right;margin-top:-35px;">
                    <tr id="ukSelectBox">
                        <td>
                            <span>
                                <b>mark the country</b>
                                <br />&nbsp;
                                <label id="selectBox">
                                    <input type="checkbox" id="selectCounties" name="road" value="false" /> counties
                                </label>
                                <br />&nbsp;
                                <label id="selectBox">
                                    <input type="checkbox" id="selectCountries" name="name" value="false" /> countries
                                </label>
                            </span>
                        </td>
                    </tr>
                </table>
                <table style="float:right;margin-top:-35px;">
                    <tr>
                        <td>
                            <input type="checkbox" name="n" value="false" id="chkWide" style="margin-top:5px"/>
                            <label for="checkbox">wide</label>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <input type="checkbox" name="ne" value="false" id="chkDotsEmpty" style="margin-top:5px" checked />
                            <label for="checkbox">counted</label>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <input type="checkbox" name="name" value="false" id="chkbox" style="margin-top:5px" />
                            <label for="checkbox"> zoom</label>
                        </td>
                    </tr>
                    <tr id="chooseColor">
                        <td>

                            <label><input type="radio" id="colorWhite" name="color" value="false" />white</label>&nbsp;
                            <label><input type="radio" id="colorBlack" name="color" value="true" />black</label>
                        </td>
                    </tr>
                    <tr id="showRoadBox">
                        <td>
                            <label><input id="showRoad" type="checkbox" name="road" value="false" />city/road</label>
                        </td>
                    </tr>
                    <tr id="markCountry">
                        <td>
                            <label><input type="checkbox" id="selectCountry" name="road" value="true" checked="checked" />mark the country</label>
                        </td>
                    </tr>
                    
                </table>
               
            </div>
            @*<div style="position:relative; width:850px">
                    Cookie: <span id="cookie"></span>
                    </div>
                &nbsp;*@
            <div id="background">
                <div id="wrapping" style="margin:67px;margin-bottom:0px;padding-bottom:30px;margin-top:10px; padding-top:30px">
                    <div style="position:absolute;margin-top:100px; margin-left:1310px;width:40px;">
                        <table>
                            <tr height="40">
                                <td class="map-menu-holder">
                                    <span>&nbsp;</span><strong id="hideMap" class="hide-map" title="close wide view">X</strong>
                                </td>
</table>
                    </div>
                        <div id="googftMapContainer" class="map-frame">
                            <div id="titleMapContainer" class="title-map-container title-map-black">
                                <span class="title-map" style="font-size:28px">@(Model.Brand.IfNotNull(c => c.name))  DISPLAY DEALERS</span><br />
                                <span class="title-map" style="font-size:18px">UK & IRELAND @(Model.Year > 0 ? "- " + Model.Year : "")</span>
                            </div>
                            <div id="googft-mapCanvas" class="map-canvas" style="height:850px"></div>
                            <div id="googft-hide-text" class="body-white" style="width:850px; height:30px;position:absolute;z-index:99;margin-top:-30px"></div>
                        </div>

                        <div id="hideBlock" style="position:relative;width:850px;margin-top:0px;margin-bottom:20px;z-index:100">
                            <span id="linkTitle" style="position:relative;font-size:18px;margin-top:25px;font-family:'Times New Roman'">@(Model.Brand.id != 0 ? Model.Brand.Url.Replace("www.", "") : "")</span>
                            <div style="float:left;margin-left:10px;">
                            </div>
                            @{
                        if (Model.Brand.id != 0)
                        {
                            var arrayName = Model.Brand.name.Split(' ');
                            var nameBlack = arrayName.First() + "_narrow.jpg";
                            var nameWhite = "";
                            if (Model.Brand.brand_id == 11)
                            {
                                nameWhite = arrayName.First() + "_narrow_white.png";
                            }
                            else
                            {
                                nameWhite = arrayName.First() + "_narrow_white.jpg";
                            }

                        @* bijela pozadina karte crna slova bijela pozadina slike *@
                        <img id="brandImageBlack" src="@(Settings.Default.BrandImages_folder+""+nameBlack)" width="250" style="float:right;margin-bottom:20px;margin-top:-10px" />

                        @* crna pozadina karte crna pozadina bijela slova  *@
                        <img id="brandImageWhite" class="brand-image-hide"
                             src="@(Settings.Default.BrandImages_folder+""+nameWhite)" width="250" style="float:right;margin-bottom:20px;margin-top:-10px" />
                        }
                            }

                            @*<img src="~/Images/arcade_logo_white2.png" width="250" style="float:right;margin-bottom:20px;" />*@
                        </div>

                        @if (Model.Year > 0)
                        {
                            <table class="table title-map" style="border:none;width:850px">
                                <tr>

                                    <td style="font-size:12px">
                                        @{
                            var brands2012 = "Burlington, Clearwater, Zamori";
                            var brands2013 = ", Britton, Aqua Cabinets, Cleargreen";
                            var brands2014 = ", Arcade ";
                                        }
                                        In @Model.Year we had @Model.Pin.Count() dealers in the UK, and they represented the following brands of<span>
                                            @{


                            if (Model.Year == 2012)
                            {
                                <span> @brands2012</span>
                            }
                            if (Model.Year == 2013)
                            {
                                <span> @brands2012@brands2013 </span>
                            }
                            if (Model.Year == 2014)
                            {
                                <span> @brands2012@brands2013@brands2014</span>
                            }
                            if (Model.Year == 2015)
                            {
                                <span> @brands2012@brands2013@brands2014</span>
                            }
                                            }



                                        </span>.
                                    </td>



                                </tr>
                            </table>
                        }
                        @if (Model.Year == 0)
                        {
                            <table class="table title-map" style="border:none;width:850px;">
                                <thead id="table" class="body-white title-map-black thead-style">

                                <th style="border-color:#666666;text-align:left">PIN</th>
                                <th style="border-color:#666666;text-align:left">DISTRIBUTOR</th>
                                <th style="border-color:#666666;text-align:left">SHOWROOM</th>
                                <th style="border-color:#666666;text-align:left">LOCATION</th>
                                <th style="border-color:#666666;text-align:left">POSTCODE</th>

                                </thead>
                                <tbody id="body1" style="font-size:12px" class="body-style even-odd">
                                    @foreach (var item in Model.Pin.OrderBy(c => c.number).Take(20))
                                    {
                                        <tr id="row">
                                            <td style="padding:2px 2px 2px 4px;width:50px; border-color:#666666"> @item.number</td>
                                            <td style="padding:2px;width:100px;border-color:#666666;">
                                                @if (item.Distributors != null)
                                                {
                                                    var count = 1;
                                                    foreach (var distributor in item.Distributors)
                                                    {
                                                        @*@distributor.distributor*@
                                                        <span> @(count > 1 ? "," : "") @distributor.customer_code </span>
                                                        count++;
                                                    }
                                                }
                                            </td>
                                            <td style="padding:2px; letter-spacing:1px;border-color:#666666">@item.name</td>
                                            <td style="width:225px;letter-spacing:1px;padding:2px;border-color:#666666">@item.location</td>
                                            <td style="padding:2px;width:80px;border-color:#666666">@item.postcode</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    </div>
            </div>
            <div style="clear:both"></div>
        </div>
    </div>
    @if(Model.Year == 0)
    {
        var modelPin = Model.Pin.OrderBy(c => c.number).Skip(20);
        //var page=modelPin.Skip
        var totalPage = (modelPin.Count() + 99) / 60;
    

    for (int i = 0; i < totalPage - 1; i++)
    {
        <br />
        <div class="framework">
            <table class="table title-map" style="border:none;width:850px;margin:67px">
                <tbody id="body2" style="font-size:12px" class="body-style even-odd">
                    @foreach (var item in modelPin.Skip(i * 70).Take(70))
                        {
                    <tr id="row">
                        <td style="padding:2px 2px 2px 4px;width:50px;border-color:#666666"> @item.number</td>
                        <td style="padding:2px;width:100px;border-color:#666666;">
                            @if (item.Distributors != null)
                                    {
                                        var count = 1;
                                        foreach (var distributor in item.Distributors)
                                        {
                                <span> @(count > 1 ? "," : "") @distributor.customer_code </span>
                                            count++;
                                        }
                                    }
                        </td>
                        <td style="padding:2px; letter-spacing:1px;border-color:#666666">@item.name</td>
                        <td style="width:225px;letter-spacing:1px;padding:2px;border-color:#666666">@item.location</td>
                        <td style="padding:2px;width:80px;border-color:#666666">@item.postcode</td>
                    </tr>

                        }
                </tbody>
            </table>
        </div>
    }
    }
</body>

